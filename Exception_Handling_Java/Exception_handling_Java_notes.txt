Exception vs Error
1) -> Exception is an incident which will cause program termination
 ->Errors are syntactical or logical errors ,sometime software and hardware failure is also an error it wont stop the program
 it will give wrong output
 
2) ->exceptions are user mistake and errors are developer mistake(desingn level/code level)
when you tell user mistake->
 In the context of user mistakes, exceptions often occur due to incorrect input or unexpected behavior from the user. For instance, if a user inputs invalid data or tries to access a resource that does not exist, the program might throw an exception to handle such situations.
when you tell developer mistake->
Developer Mistakes: When referring to developer mistakes, errors can occur due to bugs in the code or improper handling of resources. For example, a NullPointerException that results from dereferencing a null object is usually considered a developer mistake because it indicates a flaw in the logic or design of the code.
 A StackOverflowError due to infinite recursion is a serious problem that typically needs to be fixed in the code rather than handled through exception handling mechanisms.
 
 
 3)->Errors are serious problems that are outside the control of the program.. In contrast, 
 exceptions represent unexpected events within the program that can often be handled 
 
4) ->Exceptions can be caught and recovered while Errors cannot be caught or recovered. 
 
5) -:Exceptions indicate runtime errors that can be prevented or handled by the program while
  Errors are fatal and indicate serious system/environment problems. 
  (Exceptions are subclasses of the Throwable class in java)
  
  6)Exception is the parent class of All the exception
  
TYPES OF EXCEPTION
##################
Checked Exception and Unchecked Ezceptions
->n number od exception categorised in to two categpres

1)checked Exceptions
*********************
  checeked exeception are identified by java compiler exception
  so it is bit easy to handle
2)Uchecked Exception
*******************
  java compiler wont identify we have to work on this more and handle this
  
EXCEPTION HANDLING
####################
 Exception Handlig is something like when ever the exception throw in the 10 th line of 50 lines of code
 
 10th line-we have handle the exception and handle that and get back to exeute the rest of code fromb 11 to 15
 
 
 
 UNCHECKED eXCEPTION
 ************************
 Example:ATM
 Example:login page
   username and password ->verfy->then enter to page
   
   if invalid suername/pw ->it will give some messaffe"invalid" (intimating user)
   but it is not cracking the app r something like terminating the application just notify the uesr
   ->user can provide any tyoe of input,we dont have control
   -.so here we are handling the excepion by notifying the user and making to run the application peacefully
   
  How to handle Exception
  *************************
  ->Try Block ,Catch block
  ->TryBlock->we have to keep which code is giving exception
  ->catch block->the messge to print or throw the exception (something we wnt to notify)
 
try-catch-finally rukles
^^^^^^^^^^^^^^^^^^^^^^^
 ->one try block can have multiple Catch block
 try{
 }catch(){
 }catch(){
 }
 ->try catch can work without finnally
 ->catch is allways followed by finally block
 ->finally block is always executed in all the cases except
 4 case:
 1)JVM Crash:
 2)
 
 try{
 }catch(){
 }catch(){
 }finally{
 case1:exception occured,catch block handled->finally executes
 case2:exception occured,catch block not handled->finally executes
 case3:exception doesnot occured ,cat block ignored->finally executes
 }
 
 
 
 ->Y finally block?if you want to execute any statements which is not depedning the exception y
 u can give  that in finally block
 EX:try{
 code to read the file
 opening the connection/file
 }catch(){
 some exception while try to open and read the file
 }finally{
 here connections need to be closed here so in this case we can mainly use
 }
 
 
 Checked Exception
 *********************
 we can handle in two wway
 ->try catch
 ->throws 	
 
 if throws keyword is used in method signature the caller method should handle theexception  by using throws keypword.try catch
Throw key word
 ******************
 	->throw keyword is used to throw the exception whch can be predifined and userdefined also
     ->You can use throw without throws for runtime exceptions,(UNchecked exception)
     ->throw keywrd must use with throws for checked and userdefined exception
 
 Throws keyword
 *****************
 	->you should use throws in the method signature when you throw some exception in that method
 	->you should use throws in the method signature even thpugh the method didnot throwing an exception
 	but it call the method that throws exception inside this method.
 	->so you can use throws w/o throw also so it is like you are notifying the other method which calls method is throwing some eexception
 	->so even though if you use try catcg to handle the exception inside the method ,ypou can declare that it throws execption
 	->and for some checked exception java compiler itself asks us to mention throws in method signature and it notifys us to handle yhe exceptiona s well
 	 directly throwing an exception if the method does not throw exceptions itself. 	
Throwable 
**********
Throwable is a class which is superclass for all the errors nd exception in java
Only instanves of this class or subclass are thrown  by  jvm or  by throw statement
->if you want to create you own custin excption ,then you class musr extend the throwabke ckass or its subaclss
 